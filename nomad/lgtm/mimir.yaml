target: all,alertmanager,overrides-exporter
multitenancy_enabled: false
# Configure Mimir to use Minio as object storage backend.
common:
  storage:
    backend: s3
    s3:
      {{- range nomadService "minio-api" }}
      endpoint: {{ .Address }}:{{ .Port }}
      {{- end}}
      access_key_id: minio
      secret_access_key: miniosecret
      insecure: true
      bucket_name: mimir

# Blocks storage requires a prefix when using a common object storage bucket.
blocks_storage:
  storage_prefix: blocks
  tsdb:
    dir: {{ env "NOMAD_ALLOC_DIR" }}/data/ingester

# Use memberlist, a gossip-based protocol, to enable the 3 Mimir replicas to communicate
memberlist:
  join_members:
  {{- range nomadService "mimir-memberlist" }}
  - {{ .Address }}:{{ .Port }}
  {{- end}}
  advertise_addr: {{ env "NOMAD_IP_memberlist" }}
  advertise_port: {{ env "NOMAD_HOST_PORT_memberlist" }}
ruler:
  rule_path: {{ env "NOMAD_ALLOC_DIR" }}/data/ruler
  alertmanager_url: http://127.0.0.1:8080/alertmanager
  ring:
    # Quickly detect unhealthy rulers to speed up the tutorial.
    heartbeat_period: 2s
    heartbeat_timeout: 10s

alertmanager:
  data_dir: {{ env "NOMAD_ALLOC_DIR" }}/data/alertmanager
  fallback_config_file: /local/alertmanager-fallback-config.yaml
  external_url: http://localhost:9009/alertmanager

server:
  log_level: warn
  http_listen_address: "0.0.0.0"

limits:
  otel_metric_suffixes_enabled: true
  #promote_otel_resource_attributes: 
  #otel_keep_identifying_resource_attributes: true
